def gitCommit() {
        sh "git rev-parse HEAD > GIT_COMMIT"
        def gitCommit = readFile('GIT_COMMIT').trim()
        sh "rm -f GIT_COMMIT"
        return gitCommit
    }

    node {
        // Checkout source code from Git
        stage 'Checkout'
        checkout scm

        dir ('.') {
        // Build Docker image
        stage 'Build'
        sh "docker build -t ${env.DOCKERHUB_REPO} ."

        stage 'Test'
        sh "ls"


        // Log in and push image to GitLab
        stage 'Publish'
        withCredentials(
            [[
                $class: 'UsernamePasswordMultiBinding',
                credentialsId: 'dockerhub',
                passwordVariable: 'DOCKERHUB_PASSWORD',
                usernameVariable: 'DOCKERHUB_USERNAME'
            ]]
        ) {
            sh "docker login -u ${env.DOCKERHUB_USERNAME} -p ${env.DOCKERHUB_PASSWORD}"
            sh "docker push ${env.DOCKERHUB_REPO}"
        }
    }

    // Deploy
    stage 'Deploy'
    	sh "if [ ! -f ./kubectl ]; then wget -q https://storage.googleapis.com/kubernetes-release/release/v1.10.7/bin/linux/amd64/kubectl; fi"
	    sh "chmod +x ./kubectl"
                sh "./kubectl config set-credentials jenkins --token=eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtc2VjcmV0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImplbmtpbnMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIwNTFlMjNiNi1iOGMzLTExZTgtYTE5YS0wNjQxZDZkYmIxZTQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDpqZW5raW5zIn0.H9qxD9wctQKic-2qzvC8CwabPpInmjUmI5iGygbW8lG1HB3hUW-8WvOz2XtwhKQw0Xv9iroI8ULgWAUGKU5ynTpEMuRA5xlQG5RKmvkNbWQWiNCK1iup0qz8QkKWoIPPEifveVSoONPPhd6OyEId0Kx4KBPui1VG2XbJhjrQFJo_aoN0aJygKLciMsr2kJ9M3_ogru4A0JA03PkPtsB2orLfIN3qhInUXpPqoxMe-xc6sA_vGQw5ZnkLrOfO8uFxEBkNIKE7UgDiHmG326vDeZVftU55IGvehj7ZIg-e6UMYlr_5M88kHkSpz07TtqphmRek0FTX7vAV4l9uU65tSQ"
        sh "./kubectl config set-cluster dcos-k8s --server=https://apiserver.kubernetes-cluster1.l4lb.thisdcos.directory:6443 --insecure-skip-tls-verify"
        sh "./kubectl config set-context dcos-k8s --cluster=dcos-k8s --namespace=default --user=jenkins"
        sh "./kubectl config use-context dcos-k8s"
        sh "./kubectl get pods"
        sh "./kubectl apply -f serve-model.yaml"
    }
